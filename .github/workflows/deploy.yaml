name: Deploy to o2switch (Self-hosted)

on:
  push:
    branches: ["master"]        # change en "main" si besoin
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: [self-hosted, linux, deploy]    # labels de ton runner

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # On utilise PHP/Composer déjà installés sur le runner
      - name: PHP/Composer versions
        run: |
          set -e
          php -v
          composer -V

      - name: Composer install (prod, no-scripts)
        run: |
          set -e
          composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction --no-scripts

      # Build front (Yarn prioritaire si yarn.lock présent)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install & Build (Yarn or npm)
        run: |
          set -e
          if [ -f yarn.lock ]; then
            npm install -g yarn
            yarn install --frozen-lockfile
            yarn build
          else
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
            npm run build
          fi

      # Petit check SSH (utilise la clé ~/.ssh/id_ed25519 du runner)
      - name: SSH connectivity check
        run: ssh -o BatchMode=yes -o StrictHostKeyChecking=no -p 22 yiba1083@turquoise.o2switch.net "echo OK"

      # Déploiement des fichiers
      - name: Rsync to o2switch
        env:
          SSH_HOST: turquoise.o2switch.net
          SSH_USER: yiba1083
          SSH_PORT: 22
          REMOTE_PATH: /home/yiba1083/ecole.ccib38.fr/ccib38scholle
        run: |
          set -e
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "mkdir -p '$REMOTE_PATH'"
          rsync -az --delete -e "ssh -p $SSH_PORT -o StrictHostKeyChecking=no" \
            --exclude=".git" \
            --exclude=".github" \
            --exclude="node_modules" \
            --exclude="vendor" \
            --exclude="docker" \
            --exclude="docker-compose.yml" \
            --exclude="docker-compose.yaml" \
            --exclude="compose.override.yaml" \
            --exclude="tests" \
            --exclude="var/cache/*" \
            ./ "$SSH_USER@$SSH_HOST:$REMOTE_PATH"

      # Post-deploy : composer (avec scripts), migrations, cache — dans le BON dossier
      - name: Run post-deploy commands
        env:
          SSH_HOST: turquoise.o2switch.net
          SSH_USER: yiba1083
          SSH_PORT: 22
          REMOTE_PATH: /home/yiba1083/ecole.ccib38.fr/ccib38scholle
          APP_URL: https://ecole.ccib38.fr   # adapte si besoin (ou mets-le dans .env.local côté serveur)
        run: |
          set -e
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "APP_URL='${APP_URL}' REMOTE_PATH='${REMOTE_PATH}' bash -s" <<'EOSH'
          set -e
          cd "$REMOTE_PATH"

          export APP_ENV=prod
          export APP_DEBUG=0
          : "${APP_URL:?APP_URL manquant}"   # échoue si APP_URL vide

          # Composer prod avec scripts (si vendor/ absent)
          /usr/local/bin/php -d memory_limit=-1 $(which composer) install --no-dev --prefer-dist --optimize-autoloader --no-interaction

          # Base de données
          /usr/local/bin/php bin/console doctrine:migrations:migrate --no-interaction --env=prod

          # Cache
          /usr/local/bin/php bin/console cache:clear --env=prod
          /usr/local/bin/php bin/console cache:warmup --env=prod
          EOSH
